services:
  postgres-service:
    image: postgres:17
    container_name: aragok-${GRADE}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis-service:
    image: redis:8
    container_name: aragok-${GRADE}-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - redis_data:/data

  proxy:
    build: ..
    image: gok-minecraft-runner:latest
    container_name: aragok-${GRADE}-proxy
    restart: unless-stopped
    depends_on: &dependencies
      postgres-service:
        condition: service_healthy
      redis-service:
        condition: service_healthy
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"
      - "24454:24454/udp"
    volumes:
      - ./proxy:/server

  # The Survival Server
  survival: # note the name must be the same as in manifest.values.serverName
    build: ..
    image: gok-minecraft-runner:latest
    container_name: aragok-${GRADE}-survival
    restart: unless-stopped
    depends_on: *dependencies
    tty: true
    stdin_open: true
    volumes:
      - ./survival:/server

  # The Creative Server
  creative: # note the name must be the same as in manifest.values.serverName
    build: ..
    image: gok-minecraft-runner:latest
    container_name: aragok-${GRADE}-creative
    restart: unless-stopped
    depends_on: *dependencies
    tty: true
    stdin_open: true
    volumes:
      - ./creative:/server

volumes:
  postgres_data:
  redis_data:
